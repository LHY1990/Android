package tempcom.example.myapplication;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.GestureDetector;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    GestureDetector detector;
    String name;
    TextView textView;
    EditText editText;
    //텍스트뷰 자료형 선언
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        //Toast showToast=new Toast();
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        //여기까진 기본 기능설정
        showToast("온크리에이트 생성");
        editText=findViewById(R.id.editText);
        Button button=findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener(){

            public void onClick(View view){
                name=editText.getText().toString();
                showToast("입력된 값을 변수에 저장 했습니다."+name);
            }

        });
        if(savedInstanceState !=null){
            name=savedInstanceState.getString("name");
            showToast("값을 복원했습니다: " +name);
        }

        textView = findViewById(R.id.textView);
        //텍스트 뷰에 아이디 연결함
        View view =findViewById(R.id.view);
        //뷰 자료형 만들어서 뷰 할당
        view.setOnTouchListener(new View.OnTouchListener(){
            //뷰에 터치 리스너를 가져옴. 그리고 안에는 익명 클래스를

            public boolean onTouch(View view, MotionEvent motionEvent){
                int action = motionEvent.getAction();

                float curX=motionEvent.getX();
                float curY=motionEvent.getY();

                if(action== MotionEvent.ACTION_DOWN){
                    println("손가락 눌림 :"+curX+" "+ curY);
                }
                else if(action== MotionEvent.ACTION_MOVE){
                    println("손가락 움직임 :"+curX+" "+ curY);
                }
                else if(action== MotionEvent.ACTION_UP){
                    println("손가락 땜 :"+curX +" "+curY);
                }

                return true;
            }
       });
        detector =new GestureDetector(this, new GestureDetector.OnGestureListener() {
            @Override
            public boolean onDown(MotionEvent e) {
                println("onDown() 호출됌");
                return true;
            }

            @Override
            public void onShowPress(MotionEvent e) {
                println("onShowPress() 호출됌");
            }

            @Override
            public boolean onSingleTapUp(MotionEvent e) {
                println("onSingleTapUp() 호출됌");
                return true;
            }

            @Override
            public boolean onScroll(MotionEvent e1, MotionEvent e2, float v, float v1) {

                println("onScroll() 호출됌 : "+v+v1);
                return true;
            }

            @Override
            public void onLongPress(MotionEvent e) {
                println("onLongPress() 호출됌");
            }

            @Override
            public boolean onFling(MotionEvent e1, MotionEvent e2, float v, float v1) {
                println("onFling() 호출됌 : "+v+v1);
                return true;
            }
        });

        View view2=findViewById(R.id.view2);
        view2.setOnTouchListener(new View.OnTouchListener(){
            public boolean onTouch(View view, MotionEvent m){
                detector.onTouchEvent(m);
                return  true;
            }
        });
    }

    private void showToast(String a) {
        Toast.makeText(this,a,Toast.LENGTH_LONG).show();
    }

    @Override
    protected void onStart() {
        super.onStart();
        showToast("생성자 호출");
    }

    @Override
    protected void onStop() {
        super.onStop();
        showToast("온스탑 호출");
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        showToast("파괴자 호출");
    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);

        outState.putString("name", name);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if(keyCode==KeyEvent.KEYCODE_BACK){
            Toast.makeText(this,"시스템 back버튼이 눌렸습니다.",Toast.LENGTH_LONG).show();
            return true;
        }
        return false;
    }

    public void println(String data){
        textView.append(data+"\n");
    }
}
//스크롤은 제스쳐이벤트로써 좌표가 우선시
//플링은 이동한 속도값을 중요시
//제스쳐 같은 경우엔 제스쳐디텍터의 함수로 속도나 거리의 값을 받을수 있다.
