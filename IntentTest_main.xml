package org.test.intenttest;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button button=findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v) {
                Intent intent=new Intent(getApplicationContext(), SideActivity.class);
                //인텐트는 데이터 전달 오브젝트인데,목적이라는 뜻 이때 인텐트에 넣는 방향을
                //두번째에 넣어준다. 첫번째 인풋은 현재 객체를, this와 같이. 두번째에 들어가는것은
                //방향을 가진다.
                //startActivity(intent);인텐트 실행
                //startActivityForResult();간 곳으로 부터 결과물을 받는경우이다 이땐 인풋이
                //2개 들어가는데 두번째 요청코드는 어디 인텐트가 온것인지 확인하는 용도이다.
                //메인 엑티비티에서 하는 경우엔 첫번째 인풋은 출발지가 되고 두번째 인풋은 도착지가 된다.
                intent.putExtra("goto","이게 가네");
                startActivityForResult(intent, 101);

            }
        });
    }
    //온액티비티 리설트는 첫번째 인풋으로 보낸 리퀘스트 코드를 받고 두번째 인자로 다른 액티비티의
    //리설트 코드를 받는다.
    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if(requestCode==101){
            if(data!=null){
                String name=data.getStringExtra("name");
                if(name !=null){
                    Toast.makeText(this,"받은것"+name,Toast.LENGTH_SHORT ).show();
                }
            }
        }
    }
}

//this와  getApplicationContext()를 넣는경우 대부분은 문제가 없는데 이때 this의 경우엔 엑티비티가
//꺼지고 켜지는 과정에서 새로 만들어지고 getApplicationContext경우엔 더 넓게 앱이 꺼지고 켜지는 경우에
//새롭게 만들어진다. getApplicationContext경우가 몸더 광범위한것. 대부분의 경우엔 두 차이가 적다.
